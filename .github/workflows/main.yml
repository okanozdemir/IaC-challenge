name: CI to ECR

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      TF_VAR_AWS_ACCESS_KEY_ID: ${{ secrets.TF_VAR_AWS_ACCESS_KEY_ID }}
      TF_VAR_AWS_ACCOUNT_ID: ${{ secrets.TF_VAR_AWS_ACCOUNT_ID }}
      TF_VAR_AWS_REGION: ${{ secrets.TF_VAR_AWS_REGION }}
      TF_VAR_AWS_SECRET_ACCESS_KEY: ${{ secrets.TF_VAR_AWS_SECRET_ACCESS_KEY }}
      TF_VAR_ECR_NAME: ${{ secrets.TF_VAR_ECR_NAME }}
      TF_VAR_RANCHER_TOKEN: ${{ secrets.TF_VAR_RANCHER_TOKEN }} 
      TF_VAR_RANCHER_URL: ${{ secrets.TF_VAR_RANCHER_URL }}

    steps:
      - name: Check Out Repo 
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.TF_VAR_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.TF_VAR_AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.TF_VAR_aws_region }}

      - name: Install Helm
        run: |
          curl -s https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash

      - name: Init with Terraform
        run: |
          cd terraform && terraform init && terraform apply -auto-approve
          
      - name: Create AWS-EBS StorageClass
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl" && \
          sudo install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl && \
          kubectl apply -f ./terraform/yaml/aws-ebs.yaml --kubeconfig=./terraform/.kube/config

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: ${{ steps.login-ecr.outputs.registry }}/${{ secrets.TF_VAR_ecr_name }}:${{ github.run_number }},${{ steps.login-ecr.outputs.registry }}/${{ secrets.TF_VAR_ecr_name }}:latest
          
      - name: Deploy with Helm
        run: |
          helm repo add bitnami https://charts.bitnami.com/bitnami --kubeconfig=./terraform/.kube/config && \
          helm upgrade -i mysql bitnami/mysql --set auth.rootPassword="${{ secrets.MYSQL_PASSWORD }}",auth.database="app_database" --kubeconfig=./terraform/.kube/config && \
          helm upgrade -i python-app ./python-app --set MYSQL_PASSWORD="${{ secrets.MYSQL_PASSWORD }}",image.tag=${{ github.run_number }} --kubeconfig=./terraform/.kube/config && \
          echo "Application live at http://$(kubectl --kubeconfig=./terraform/.kube/config get svc app-chart --template "{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}")"
